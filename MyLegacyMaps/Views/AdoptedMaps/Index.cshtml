@model IEnumerable<MyLegacyMaps.Models.AdoptedMap>
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Adopted Maps";
    var realEstateMapType = new MyLegacyMaps.Models.MapType{ MapTypeId =1, Name = "Real Estate", IsActive=true };
}

<h2>My Adopted Maps</h2>
<div>
    @Html.ActionLink(Html.Encode(User.Identity.GetUserName()), "Published", "AdoptedMaps", new { id = User.Identity.GetUserId() }, htmlAttributes: new { title = "Manage" })
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>   
        <th>
            Shared Status
        </th>  
        <th>
            Flags
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateModified)
        </th>              
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ShareStatusType.Name)
        </td>       
        <td>
            <span>@item.Flags.Count.ToString()</span>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateModified)
        </td> 
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.AdoptedMapId }) |

            @if (item.Map.MapTypes.Contains(realEstateMapType))
            {
                @Html.ActionLink("View", "RealEstateMap", new { id = item.AdoptedMapId })
            }
            else
            {
                @Html.ActionLink("View", "AdoptedMap", new { id=item.AdoptedMapId }) 
            }            
            
            |
            @Html.ActionLink("Delete", "Delete", new { id=item.AdoptedMapId })
        </td>
    </tr>
}

</table>
