@model MyLegacyMaps.Models.Map
@using MyLegacyMaps.Models
@{
    ViewBag.Title = "Edit Map";
}

<h2>Edit Map</h2>
<p>
    @Html.ActionLink("Back to List", "MapsManage")
</p>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Map</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MapId)
        @Html.HiddenFor(model => model.OrientationTypeId)
        @Html.HiddenFor(model => model.FileName)
        @Html.HiddenFor(model => model.ImageUrl)
        @Html.HiddenFor(model => model.ThumbUrl)
        @Html.HiddenFor(model => model.DateCreated)
        
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Orientation</label>
            <div class="col-md-10">
                <div class="dropdown">
                    <button class="btn btn-default dropdown-toggle" type="button" id="ddlOrientation"
                            data-toggle="dropdown"><span id="ddlOrientationSelectedVal">@Html.DisplayFor(model => model.OrientationType.Name)</span><span class="caret"></span></button>    
                    &nbsp;                    
                    <ul class="dropdown-menu" role="menu">
                        <li role="presentation" onclick="onOrientationSelected(1, 'Horizontal')">
                            <a role="menuitem" href="#">Horizontal</a>
                        </li>
                        <li role="presentation" onclick="onOrientationSelected(2, 'Vertical')">
                            <a role="menuitem" href="#">Veritical</a>
                        </li>
                    </ul>   
               </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Category</label>
            <div class="col-md-10">
                @foreach (var item in (List<MapType>)ViewBag.MapTypes)
                {
                    if (Model.MapTypes.Contains(item))
                    {
                        <input type="checkbox" name="selectedMapTypes" value="@item.MapTypeId"
                               checked="checked" />
                    }
                    else
                    {
                        <input type="checkbox" name="selectedMapTypes" value="@item.MapTypeId" />
                    }                
                    @Html.Label(@item.Name)    
                }              
            </div>
        </div>              

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } })               
            </div>
        </div> 

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })              
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ThumbUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ThumbUrl, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div> 

        <div class="form-group">
            <label class="control-label col-md-2" for="Photo">Main Image (.png)</label>
            <div class="col-md-10">
                <input type="file" name="photo" accept=".png" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Photo">Thumb (.png, 310 x 310)</label>
            <div class="col-md-10">
                <input type="file" name="thumb" accept=".png" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "MapsManage")
    <script type="text/javascript">
        function onOrientationSelected(id, value) {
            $('#ddlOrientationSelectedVal').text(value);
            $('#OrientationTypeId').val(id);
        }      
    </script>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")      
}
